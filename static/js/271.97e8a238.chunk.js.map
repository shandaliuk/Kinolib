{"version":3,"file":"static/js/271.97e8a238.chunk.js","mappings":"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","sources":["images/sprite.svg","components/Container/Container.styled.jsx","components/Container/Container.jsx","services/serviceApi.js","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/Movies/PopularMovies/PopularMovies.styled.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Movies/PopularMovies/PopularMovies.jsx","pages/TrendingMovies/TrendingMovies.jsx"],"sourcesContent":["var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-film\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"currentColor\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M26.427 2.667h-20.853c-1.605 0-2.907 1.301-2.907 2.907v0 20.853c0 1.605 1.301 2.907 2.907 2.907v0h20.853c1.605 0 2.907-1.301 2.907-2.907v0-20.853c0-1.605-1.301-2.907-2.907-2.907v0zM9.333 2.667v26.667M22.667 2.667v26.667M2.667 16h26.667M2.667 9.333h6.667M2.667 22.667h6.667M22.667 22.667h6.667M22.667 9.333h6.667\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-love\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff6b08\",\n    style: {\n      fill: \"var(--color2, #ff6b08)\"\n    },\n    d: \"M16 30.144l-2.24-2.217c-8.32-7.287-13.76-12.201-13.76-18.217 0-4.917 3.84-8.715 8.8-8.715 2.72 0.002 5.44 1.269 7.2 3.326 1.761-2.019 4.329-3.296 7.195-3.323l0.005-0c4.96 0 8.8 3.801 8.8 8.711 0 6.021-5.44 10.933-13.76 18.217l-2.24 2.219z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"currentColor\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.1333,\n    d: \"M8.533 8.533l14.933 14.933M8.533 23.467l14.933-14.933\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-left\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"currentColor\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.666,\n    d: \"M25.334 16h-18.668M16 25.334l-9.334-9.334 9.334-9.334\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-right\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"currentColor\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.666,\n    d: \"M6.666 16h18.668M16 25.334l9.334-9.334-9.334-9.334\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-search\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"currentColor\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M14.667 25.333c5.891 0 10.667-4.776 10.667-10.667s-4.776-10.667-10.667-10.667v0c-5.891 0-10.667 4.776-10.667 10.667s4.776 10.667 10.667 10.667v0zM28 28l-5.8-5.8\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.f5d1ce64ca6f73d63b4a6024ea33da16.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\n\r\nexport const ContainerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 320px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 768px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: 1280px;\r\n  }\r\n`;\r\n","import { ContainerWrapper } from './Container.styled';\r\n\r\nexport const Container = ({ children }) => {\r\n  return <ContainerWrapper>{children}</ContainerWrapper>;\r\n};\r\n","import allGenres from 'services/moviesApi/genres.json';\r\n\r\nexport const getGenres = ids => {\r\n  const fixedNumberIds = ids.slice(0, 3);\r\n  const genres = fixedNumberIds.map(id => {\r\n    const [{ name }] = allGenres.genres.filter(genre => genre.id === id);\r\n    return name;\r\n  });\r\n  if (genres.length === 3) {\r\n    return genres.slice(0, 2).join(', ') + ', Other';\r\n  }\r\n  return genres.join(', ');\r\n};\r\n\r\nexport const getYear = date => date.slice(0, 4);\r\n\r\nexport const normalizeTitle = title => {\r\n  if (title.length > 34) {\r\n    return title.slice(0, 31) + '...';\r\n  }\r\n  return title;\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const MovieLink = styled(Link)`\r\n  display: block;\r\n  text-align: center;\r\n  padding-bottom: 12px;\r\n  border-bottom: 1px solid transparent;\r\n  transition: background-color ${props => props.theme.transitions.main},\r\n    border ${props => props.theme.transitions.main},\r\n    box-shadow ${props => props.theme.transitions.main};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: rgba(3, 10, 2, 0.5);\r\n    box-shadow: ${props => props.theme.shadows.box};\r\n    border-bottom: 1px solid ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 402px;\r\n  width: 280px;\r\n  margin-bottom: 10px;\r\n  object-position: center;\r\n  object-fit: cover;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 455px;\r\n    width: 336px;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    height: 574px;\r\n    width: 394px;\r\n    margin-bottom: 12px;\r\n  }\r\n`;\r\n\r\nexport const MovieTitle = styled.h2`\r\n  font-weight: 200;\r\n  font-size: 12px;\r\n  line-height: 1.17;\r\n  text-transform: uppercase;\r\n  color: ${props => props.theme.colors.primary};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    line-height: 1.3;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: 20px;\r\n    line-height: 1.2;\r\n  }\r\n`;\r\n\r\nexport const InfoWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-weight: 200;\r\n  font-size: 12px;\r\n  line-height: 1.17;\r\n  color: ${props => props.theme.colors.accent};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    line-height: 1.3;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: 20px;\r\n    line-height: 1.2;\r\n  }\r\n`;\r\n","import { useLocation } from 'react-router-dom';\r\nimport { getGenres, getYear, normalizeTitle } from 'services/serviceApi';\r\nimport { MovieLink, Image, MovieTitle, InfoWrapper } from './Movie.styled';\r\nimport unavaliablePoster from 'images/unavailable-poster.jpg';\r\n\r\nexport const Movie = ({ id, title, poster, date, genreIds }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <MovieLink to={`${id}`} state={{ from: location }}>\r\n      <Image\r\n        src={\r\n          poster\r\n            ? `https://image.tmdb.org/t/p/w500${poster}`\r\n            : unavaliablePoster\r\n        }\r\n        alt={`Movie: ${title}`}\r\n      />\r\n      <MovieTitle>{normalizeTitle(title)}</MovieTitle>\r\n      <InfoWrapper>\r\n        <ul>{getGenres(genreIds)} </ul>\r\n        <p>&nbsp;| {getYear(date)}</p>\r\n      </InfoWrapper>\r\n    </MovieLink>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport font from 'images/font.jpg';\r\n\r\nexport const MoviesSection = styled.section`\r\n  padding-top: 230px;\r\n  padding-bottom: 70px;\r\n  background-image: url(${font});\r\n  background-size: auto;\r\n  background-repeat: no-repeat;\r\n  background-attachment: scroll;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    background-size: contain;\r\n    padding-top: 217px;\r\n    padding-bottom: 90px;\r\n  }\r\n`;\r\n\r\nexport const HiddenTitle = styled.h1`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n`;\r\n\r\nexport const MoviesList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  row-gap: 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: 32px;\r\n    row-gap: 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    column-gap: 16px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nexport const SitePagination = styled(ReactPaginate)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 40px;\r\n  padding-bottom: 40px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 60px;\r\n  }\r\n\r\n  li {\r\n    position: relative;\r\n    width: 40px;\r\n    height: 40px;\r\n\r\n    &.selected {\r\n      color: ${props => props.theme.colors.accent};\r\n      border: 1px solid ${props => props.theme.colors.accent};\r\n      pointer-events: none;\r\n    }\r\n\r\n    &.next,\r\n    &.previous {\r\n      background-color: transparent;\r\n\r\n      &:hover,\r\n      &:focus {\r\n        color: ${props => props.theme.colors.accent};\r\n      }\r\n    }\r\n\r\n    &.disabled {\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n    font-weight: 200;\r\n    font-size: 12px;\r\n    line-height: 1.33;\r\n  }\r\n\r\n  a:hover,\r\n  &:focus {\r\n    background-color: rgb(224, 234, 210, 0.3);\r\n    color: ${props => props.theme.colors.card};\r\n  }\r\n`;\r\n\r\nexport const PaginationIcon = styled.svg`\r\n  width: 16px;\r\n  height: 16px;\r\n`;\r\n","import sprite from 'images/sprite.svg';\r\nimport { SitePagination, PaginationIcon } from './Pagination.styled';\r\n\r\nexport const Pagination = ({ page = 1, onClick, pageCount = 20 }) => {\r\n  return (\r\n    <SitePagination\r\n      breakLabel=\"...\"\r\n      nextLabel={\r\n        <PaginationIcon>\r\n          <use href={sprite + '#icon-arrow-right'}></use>\r\n        </PaginationIcon>\r\n      }\r\n      // forcePage={page}\r\n      onClick={onClick}\r\n      pageRangeDisplayed={2}\r\n      pageCount={pageCount}\r\n      previousLabel={\r\n        <PaginationIcon>\r\n          <use href={sprite + '#icon-arrow-left'}></use>\r\n        </PaginationIcon>\r\n      }\r\n      marginPagesDisplayed={1}\r\n      renderOnZeroPageCount={null}\r\n    />\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { ColorRing } from 'react-loader-spinner';\r\nimport { useGetTrendingMoviesQuery } from 'services/moviesApi/moviesApi';\r\nimport { Container } from 'components/Container/Container';\r\nimport { Movie } from 'components/Movie/Movie';\r\nimport { Pagination } from 'components/Pagination/Pagination';\r\nimport { MoviesSection, HiddenTitle, MoviesList } from './PopularMovies.styled';\r\n\r\nexport const PopularMovies = () => {\r\n  const [page, setPage] = useState(1);\r\n\r\n  // const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const { data: movies, error, isLoading } = useGetTrendingMoviesQuery(page);\r\n\r\n  const handleClick = () => setPage(page => page + 1);\r\n\r\n  return (\r\n    <>\r\n      <MoviesSection>\r\n        <Container>\r\n          {error && <p>Something went wrong :(</p>}\r\n          {isLoading && <ColorRing />}\r\n          {!isLoading && !error && (\r\n            <>\r\n              <HiddenTitle>Trending movies</HiddenTitle>\r\n              <MoviesList>\r\n                {error && <p>Something went wrong :(</p>}\r\n                {isLoading && <ColorRing />}\r\n                {!error &&\r\n                  !isLoading &&\r\n                  movies.results.map(result => {\r\n                    return (\r\n                      <li key={result.id}>\r\n                        <Movie\r\n                          id={result.id}\r\n                          title={result.title}\r\n                          poster={result.poster_path}\r\n                          date={result.release_date}\r\n                          genreIds={result.genre_ids}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </MoviesList>\r\n              <Pagination onClick={handleClick} page={page} />\r\n            </>\r\n          )}\r\n        </Container>\r\n      </MoviesSection>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n","import { PopularMovies } from 'components/Movies/PopularMovies/PopularMovies';\r\n\r\nconst TrendingMovies = () => {\r\n  return (\r\n    <main>\r\n      <PopularMovies />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TrendingMovies;\r\n"],"names":["ContainerWrapper","styled","Container","children","getGenres","ids","genres","slice","map","id","allGenres","genre","name","length","join","getYear","date","normalizeTitle","title","MovieLink","Link","props","theme","transitions","main","shadows","box","colors","primary","Image","MovieTitle","InfoWrapper","accent","Movie","poster","genreIds","location","useLocation","to","state","from","src","unavaliablePoster","alt","MoviesSection","font","HiddenTitle","MoviesList","SitePagination","ReactPaginate","card","PaginationIcon","Pagination","page","onClick","pageCount","breakLabel","nextLabel","href","sprite","pageRangeDisplayed","previousLabel","marginPagesDisplayed","renderOnZeroPageCount","PopularMovies","useState","setPage","useGetTrendingMoviesQuery","movies","data","error","isLoading","results","result","poster_path","release_date","genre_ids"],"sourceRoot":""}